/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetablemanagement;

import java.sql.ResultSet;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import static timetablemanagement.Home.HomeDesktop;

/**
 *
 * @author Thiline Tissera
 */
public class Manage_Sessions extends javax.swing.JInternalFrame {

    String code = "";
    public Manage_Sessions() {
        initComponents();
        LoadTable();
        combolec1.removeAllItems();
        combolec1.addItem("Select");
        combolec2.removeAllItems();
        combolec2.addItem("Select");
        combosubject.removeAllItems();
        combosubject.addItem("Select");
        combogroup.removeAllItems();
        combogroup.addItem("Select");
        
        fillComboLec();
        fillComboGroup();
        fillComboSubGroup();
        fillComboSubject();
        fillFilters();
         
        this.setBorder(null);
        BasicInternalFrameUI bui = (BasicInternalFrameUI)this.getUI();
        bui.setNorthPane(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        combolec1 = new javax.swing.JComboBox<>();
        combolec2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        combosubject = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        combogroup = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        spinnos = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        combotag = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        spindura = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        Add_btn = new javax.swing.JButton();
        Update_btn = new javax.swing.JButton();
        Delete_btn = new javax.swing.JButton();
        Clear_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        Search_tf = new javax.swing.JTextField();
        filterlec = new javax.swing.JComboBox<>();
        filtersub = new javax.swing.JComboBox<>();
        filtertag = new javax.swing.JComboBox<>();
        filtergrp = new javax.swing.JComboBox<>();
        btnfilter = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        combolec1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combolec1ActionPerformed(evt);
            }
        });

        combolec2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combolec2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Lecturer(s)");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(combolec1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combolec2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(combolec1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combolec2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        combosubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combosubjectItemStateChanged(evt);
            }
        });
        combosubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                combosubjectMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                combosubjectMouseReleased(evt);
            }
        });
        combosubject.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                combosubjectInputMethodTextChanged(evt);
            }
        });
        combosubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combosubjectActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Subject");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(combosubject, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(combosubject, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        combogroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combogroupActionPerformed(evt);
            }
        });

        jLabel4.setText("Select Group");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(combogroup, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(combogroup, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setText("Number of Students");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinnos, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spinnos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        combotag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combotagActionPerformed(evt);
            }
        });

        jLabel3.setText("Select Tag");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(combotag, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combotag, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Duration (hours)");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(spindura, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel6)
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(36, 36, 36)
                    .addComponent(spindura, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(36, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Add_btn.setText("Add");
        Add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_btnActionPerformed(evt);
            }
        });

        Update_btn.setText("Update");
        Update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_btnActionPerformed(evt);
            }
        });

        Delete_btn.setText("Delete");
        Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_btnActionPerformed(evt);
            }
        });

        Clear_btn.setText("Clear");
        Clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Update_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(Add_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Clear_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Delete_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(Add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Session ID", "Lecturer 01", "Lecturer  02", "Subject Code", "Subject Name", "Tag", "Group", "NoS", "Duration", "Session Code"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(65);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(65);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(65);
            jTable1.getColumnModel().getColumn(1).setMinWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(2).setMinWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(80);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(6).setMinWidth(120);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(120);
            jTable1.getColumnModel().getColumn(7).setMinWidth(60);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(8).setMinWidth(60);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(9).setMinWidth(350);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(350);
            jTable1.getColumnModel().getColumn(9).setMaxWidth(350);
        }

        jLabel8.setText("Search");

        Search_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_tfActionPerformed(evt);
            }
        });
        Search_tf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Search_tfKeyReleased(evt);
            }
        });

        filterlec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterlecActionPerformed(evt);
            }
        });

        filtersub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtersubActionPerformed(evt);
            }
        });

        filtertag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtertagActionPerformed(evt);
            }
        });

        filtergrp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtergrpActionPerformed(evt);
            }
        });

        btnfilter.setText("Filter");
        btnfilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Search_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filterlec, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filtersub, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filtertag, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(filtergrp, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnfilter, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1254, Short.MAX_VALUE))
                .addGap(59, 59, 59))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filtertag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filtergrp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filtersub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filterlec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnfilter, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Search_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Manage Sessions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_btnActionPerformed
        String subcode="";
        
        String lec1 = combolec1.getSelectedItem().toString(); 
        String lec2 = combolec2.getSelectedItem().toString(); 
        String sub = combosubject.getSelectedItem().toString();
        String tag = combotag.getSelectedItem().toString();
        String group = combogroup.getSelectedItem().toString();
        String nos = spinnos.getValue().toString();
        String dura = spindura.getValue().toString();
        
        if("Select".equals(lec2)){
            lec2 = "";
        }
                        
            try{
          
                ResultSet rs = DataBase.getData("SELECT subcode FROM subjects where subname = '"+sub+"'");

                if(rs.next()){

                 subcode = rs.getString("subcode");
                }  

                code = lec1+"-"+subcode+"-"+sub+"-"+tag+"-"+group+"-"+nos+"-"+dura;

            }catch(Exception e){

                JOptionPane.showMessageDialog(rootPane, e);
            }       
            try
                               
            {
                if(validateAdd() && validateFields()){
                DataBase.setData("insert into session(l1name,l2name,tagname,groupname,subname,nos,duration,sessioncode,subcode) values('"+lec1+"','"+lec2+"','"+tag+"','"+group+"','"+sub+"','"+nos+"','"+dura+"','"+code+"','"+subcode+"')");
                JOptionPane.showMessageDialog(null, "Session Successfully Added");
                
                Refresh();
                }
            }
            catch (Exception e)
            {
                        JOptionPane.showMessageDialog(null, "Failed" + e);
            }
           
            
            LoadTable();          
    }//GEN-LAST:event_Add_btnActionPerformed

    private void Update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_btnActionPerformed
        String subcode="";
        String code = "";
        String lec1 = combolec1.getSelectedItem().toString(); 
        String lec2 = combolec2.getSelectedItem().toString(); 
        String sub = combosubject.getSelectedItem().toString();
        String tag = combotag.getSelectedItem().toString();
        String group = combogroup.getSelectedItem().toString();
        String nos = spinnos.getValue().toString();
        String dura = spindura.getValue().toString();
        
        if("Select".equals(lec2)){
            lec2 = "";
        }
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        String sessionid = dtm.getValueAt(row, 0).toString();
        if (row != -1) 
        {
                                 
             if(validateFields()){
                int confirm = JOptionPane.showConfirmDialog(null, "Do you want to Update?", "Update", JOptionPane.YES_NO_OPTION); 
                if (confirm == 0) 
                {
                     try{
          
                ResultSet rs = DataBase.getData("SELECT subcode FROM subjects where subname = '"+sub+"'");

                if(rs.next()){

                 subcode = rs.getString("subcode");
                }  

                code = lec1+"-"+subcode+"-"+sub+"-"+tag+"-"+group+"-"+nos+"-"+dura;

            }catch(Exception e){

                JOptionPane.showMessageDialog(rootPane, e);
            }  
                    try
                    {
                        
                      DataBase.setData("UPDATE session set l1name = '"+lec1+"', l2name = '"+lec2+"', tagname = '"+tag+"', groupname = '"+group+"', subname = '"+sub+"', nos = '"+nos+"', duration = '"+dura+"',subcode = '"+subcode+"',sessioncode = '"+code+"' where sessionid = '"+sessionid+"' ");
                      JOptionPane.showMessageDialog(null, " Successfully Updated");
                      Refresh();
                                            
                    }
                    catch (Exception e)
                    {
                              JOptionPane.showMessageDialog(null, "Failed" + e);
                    }
                  LoadTable();
                }
            }
           
      }else{
                    
                     JOptionPane.showMessageDialog(null, "Please Select a row from the table to Update");
                
                }
    }//GEN-LAST:event_Update_btnActionPerformed

    private void Delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_btnActionPerformed
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
        String sessionid = dtm.getValueAt(row, 0).toString();
 
        if (row != -1) 
        {
        
            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to delete?", "Delete", JOptionPane.YES_NO_OPTION); 
            if (confirm == 0) 
            {
                try
                {
                  DataBase.setData("DELETE FROM session WHERE sessionid = '"+sessionid+"'");
                  JOptionPane.showMessageDialog(null, "Successfully Deleted");

                }
                catch (Exception e)
                {
                          JOptionPane.showMessageDialog(null, "Failed" + e);
                }
              
              Refresh();
              LoadTable();
            }
        }
        else
        {
             JOptionPane.showMessageDialog(null, "Please Select a Row to Delete");
        }
        
    }//GEN-LAST:event_Delete_btnActionPerformed

    private void Clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_btnActionPerformed
        LoadTable();
        Refresh();   
    }//GEN-LAST:event_Clear_btnActionPerformed

    private void Search_tfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Search_tfKeyReleased
        String search = Search_tf.getText();
        
       
            //String search =search_tf.getText();
            if (search.equalsIgnoreCase("")) 
            {
                LoadTable();
            } 
            else 
            {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);

                try 
                {

                        ResultSet rs = DataBase.getData("SELECT * FROM session WHERE l1name LIKE '%" + search + "%' OR l2name LIKE '%"+search+"%' OR tagname LIKE '%"+search+"%' OR groupname LIKE '%"+search+"%' OR subname LIKE '%"+search+"%' OR subcode LIKE '%"+search+"%'");
                    while (rs.next()) 
                    {

                        Vector v = new Vector();

                        v.add(rs.getString(1));
                        v.add(rs.getString(2));  
                        v.add(rs.getString(3));  
                        v.add(rs.getString(10));  
                        v.add(rs.getString(6));
                        v.add(rs.getString(4));
                        v.add(rs.getString(5));  
                        v.add(rs.getString(7));  
                        v.add(rs.getString(8));
                        v.add(rs.getString(9));

                        dtm.addRow(v);

                    }

                } 
                catch (Exception e)
                {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e);
                }
            }
    }//GEN-LAST:event_Search_tfKeyReleased

    private void Search_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_tfActionPerformed

    private void combolec1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combolec1ActionPerformed
        // TODO add your handling code here:
      combolec2.removeAllItems();
      combolec2.addItem("Select");
      fillComboLec();
      var lec = combolec1.getSelectedItem();
      if(lec == "Select"){     
      }else{
      combolec2.removeItem(lec);
      }  
    }//GEN-LAST:event_combolec1ActionPerformed

    private void combolec2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combolec2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combolec2ActionPerformed

    private void combosubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combosubjectActionPerformed
        combotag.removeAllItems();
        combotag.addItem("Select");
        String tag = combosubject.getSelectedItem().toString();
        try{
          
            ResultSet rs = DataBase.getData("SELECT DISTINCT relatedtag FROM tag where tagname = '"+tag+"'");
             
            while(rs.next()){
            
               String tagid = rs.getString("relatedtag");   
                combotag.addItem(tagid);  
            }
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        }
        
    }//GEN-LAST:event_combosubjectActionPerformed

    private void combotagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combotagActionPerformed
        // TODO add your handling code here:
        
           if(combotag.getSelectedItem()==null) {}
          else{
           if((combotag.getSelectedItem().equals("Lecture")) ||(combotag.getSelectedItem().equals("Tute")) ){
        
            combogroup.removeAllItems();
            combogroup.addItem("Select");
            fillComboGroup();
            
            
        }else if(combotag.getSelectedItem().equals("Lab")){
        
            combogroup.removeAllItems();
            combogroup.addItem("Select");
            fillComboSubGroup();
        }else{      
            
            combogroup.removeAllItems();
            combogroup.addItem("Select");
        }
       }
    }//GEN-LAST:event_combotagActionPerformed

    private void combogroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combogroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combogroupActionPerformed

    private void combosubjectInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_combosubjectInputMethodTextChanged

        // TODO add your handling code here:
    }//GEN-LAST:event_combosubjectInputMethodTextChanged

    private void combosubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combosubjectItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_combosubjectItemStateChanged

    private void combosubjectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combosubjectMousePressed

        // TODO add your handling code here:
    }//GEN-LAST:event_combosubjectMousePressed

    private void combosubjectMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_combosubjectMouseReleased
       
        // TODO add your handling code here:
    }//GEN-LAST:event_combosubjectMouseReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        Refresh();
        combolec1.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        combolec2.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        combosubject.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        combotag.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        combogroup.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());

        String inos  = (jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
        String idura = (jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString());

        int nos = Integer.parseInt(inos);
        int dura = Integer.parseInt(idura);

        spinnos.setValue(nos);
        spindura.setValue(dura);

    }//GEN-LAST:event_jTable1MouseClicked

    private void filtersubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtersubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtersubActionPerformed

    private void filtertagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtertagActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtertagActionPerformed

    private void filtergrpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtergrpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtergrpActionPerformed

    private void filterlecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterlecActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_filterlecActionPerformed

    private void btnfilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfilterActionPerformed
        // TODO add your handling code here:
        String lec = filterlec.getSelectedItem().toString();
        String sub = filtersub.getSelectedItem().toString();
        String tag = filtertag.getSelectedItem().toString();
        String grp = filtergrp.getSelectedItem().toString();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        
        if("Filter by Lecturer".equals(lec)){
            
            lec = "";
        }
        if("Filter by Subject".equals(sub)){
            
            sub = "";
        }
        if("Filter by Tag".equals(tag)){
            
            tag = "";
        }
        if("Filter by Group".equals(grp)){
            
            grp = "";
        }
        
          try 
                {

                        ResultSet rs = DataBase.getData("SELECT * FROM session WHERE (l1name LIKE '%" + lec + "%' OR l2name LIKE '%"+lec+"%') AND tagname LIKE '%"+tag+"%' AND groupname LIKE '%"+grp+"%' AND subname LIKE '%"+sub+"%'");
                    while (rs.next()) 
                    {

                        Vector v = new Vector();

                        v.add(rs.getString(1));
                        v.add(rs.getString(2));  
                        v.add(rs.getString(3));  
                        v.add(rs.getString(10));  
                        v.add(rs.getString(6));
                        v.add(rs.getString(4));
                        v.add(rs.getString(5));  
                        v.add(rs.getString(7));  
                        v.add(rs.getString(8));
                        v.add(rs.getString(9));

                        dtm.addRow(v);

                    }

                } 
                catch (Exception e)
                {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e);
                }        
    }//GEN-LAST:event_btnfilterActionPerformed

    public void Refresh()
    {
        combolec1.setSelectedItem("Select");
        combolec2.setSelectedItem("Select");
        combosubject.setSelectedItem("Select");
        combotag.setSelectedItem("Select");
        combogroup.setSelectedItem("Select");
        spinnos.setValue(0);
        spindura.setValue(0);
        Search_tf.setText(""); 
        filterlec.setSelectedItem("Filter by Lecturer");
        filtersub.setSelectedItem("Filter by Subject");
        filtertag.setSelectedItem("Filter by Tag");
        filtergrp.setSelectedItem("Filter by Group");
        
    }
    
    public void LoadTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        
        try {
              
                ResultSet rs = DataBase.getData("select * from session");
                
                while (rs.next())
                {

                    Vector v = new Vector();
                   
                    v.add(rs.getString(1));
                    v.add(rs.getString(2));  
                    v.add(rs.getString(3));  
                    v.add(rs.getString(10));  
                    v.add(rs.getString(6));
                    v.add(rs.getString(4));
                    v.add(rs.getString(5));  
                    v.add(rs.getString(7));  
                    v.add(rs.getString(8));
                    v.add(rs.getString(9));
                    
                    dtm.addRow(v);

                }

            } catch (Exception e) 
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
            }
    }
    
   public boolean validateFields(){  
        if("Select".equals(combolec1.getSelectedItem().toString()))
       {
                JOptionPane.showMessageDialog(null, "Select Lecturer ");
                return false;
       }
         if("Select".equals(combosubject.getSelectedItem().toString()))
       {
                JOptionPane.showMessageDialog(null, "Select Subject");
                return false;
       }
        if("Select".equals(combotag.getSelectedItem().toString()))
       {
                JOptionPane.showMessageDialog(null, "Select Tag");
                return false;
       }
        if("Select".equals(combogroup.getSelectedItem().toString()))
       {
                JOptionPane.showMessageDialog(null, "Select Group");
                return false;
       }
         if(spinnos.getValue().toString().equalsIgnoreCase("0") ||  spindura.getValue().toString().equalsIgnoreCase("0")) {
             
          int confirm = JOptionPane.showConfirmDialog(null, "You are trying to add a Session without any students or duration. Continue?", "Warning", JOptionPane.YES_NO_OPTION); 
          if (confirm == 0){
          }else{
          return false;
          }        
         }           
            return true;
    }
     public boolean validateAdd(){
   
        String exist = "";
        
         try
        {
                //System.out.println(" " + nic);
                ResultSet ex = DataBase.getData("SELECT `sessioncode` FROM `session` WHERE `sessioncode` = '" +code+ "' GROUP BY `sessioncode` HAVING COUNT(*) > '0'");

                while (ex.next())
                {
                    exist = ex.getString("sessioncode");
                   
                }
            } 
        catch (Exception e) 
        {
                
            JOptionPane.showMessageDialog(null, "Failed" + e);
        }
        if (!"".equals(exist)){
            
            JOptionPane.showMessageDialog(null, "Session is already created");
            return false;
            
        }
   
        return true; 
   }
    private void fillComboLec(){
        
        String lecid = "";
    
        try{
          
            ResultSet rs = DataBase.getData("SELECT lecturer_name AS lect FROM lecturer ORDER by ranking ASC");
             
            while(rs.next()){
            
                lecid = rs.getString("lect");
                combolec1.addItem(lecid);
                combolec2.addItem(lecid);
            }
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        }
        
    }

    private void fillComboGroup(){
        
        String groupid = "";
    
        try{
          
            ResultSet rs = DataBase.getData("SELECT DISTINCT grpid AS grp FROM student order by sid" );
             
            while(rs.next()){
            
                groupid = rs.getString("grp");  
                combogroup.addItem(groupid);  
            }
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        }
              
    }
    
     private void fillComboSubGroup(){
        
        String groupid = "";
    
        try{
          
            ResultSet rs = DataBase.getData("SELECT subgrpid AS grp FROM student order by sid" );
             
            while(rs.next()){
            
                groupid = rs.getString("grp");  
                combogroup.addItem(groupid);  
            }
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        }
              
    }

    private void fillComboSubject(){
        
        String subid = "";
    
        try{
          
            ResultSet rs = DataBase.getData("SELECT subname AS sub FROM subjects order by id");
             
            while(rs.next()){
            
                subid = rs.getString("sub");
                combosubject.addItem(subid);
            }
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        }        
    } 
    
    private void fillFilters(){
    
        //fill lectures filter
   
        filterlec.removeAllItems();
        filterlec.addItem("Filter by Lecturer");
         try{
          
            ResultSet rs = DataBase.getData("SELECT l1name from session union select l2name from session");
             
            while(rs.next()){
            
             String lec = rs.getString("l1name");            
             filterlec.addItem(lec);            
            }  
           
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        }      
        
        //fill subjects filter
        
        filtersub.removeAllItems();
        filtersub.addItem("Filter by Subject");
         try{
          
            ResultSet rs = DataBase.getData("SELECT DISTINCT subname from session");
             
            while(rs.next()){
            
             String sub = rs.getString("subname");
             filtersub.addItem(sub);            
            }  
           
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        } 
         
         //fill tags filter
         
        filtertag.removeAllItems();
        filtertag.addItem("Filter by Tag");
         try{
          
            ResultSet rs = DataBase.getData("SELECT DISTINCT tagname from session");
             
            while(rs.next()){
            
             String sub = rs.getString("tagname");
             filtertag.addItem(sub);            
            }  
           
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        } 
         
          //fill groups filter
         
        filtergrp.removeAllItems();
        filtergrp.addItem("Filter by Group");
         try{
          
            ResultSet rs = DataBase.getData("SELECT DISTINCT groupname from session");
             
            while(rs.next()){
            
             String sub = rs.getString("groupname");
             filtergrp.addItem(sub);            
            }  
           
        }catch(Exception e){
        
            JOptionPane.showMessageDialog(rootPane, e);
        } 
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_btn;
    private javax.swing.JButton Clear_btn;
    private javax.swing.JButton Delete_btn;
    private javax.swing.JTextField Search_tf;
    private javax.swing.JButton Update_btn;
    private javax.swing.JButton btnfilter;
    private javax.swing.JComboBox<String> combogroup;
    private javax.swing.JComboBox<String> combolec1;
    private javax.swing.JComboBox<String> combolec2;
    private javax.swing.JComboBox<String> combosubject;
    private javax.swing.JComboBox<String> combotag;
    private javax.swing.JComboBox<String> filtergrp;
    private javax.swing.JComboBox<String> filterlec;
    private javax.swing.JComboBox<String> filtersub;
    private javax.swing.JComboBox<String> filtertag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JSpinner spindura;
    private javax.swing.JSpinner spinnos;
    // End of variables declaration//GEN-END:variables
}
