/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetablemanagement;

import java.sql.ResultSet;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import static timetablemanagement.Home.HomeDesktop;

/**
 *
 * @author Thiline Tissera
 */
public class Lecturer extends javax.swing.JInternalFrame {

    /**
     * Creates new form Lecturer
     */
    public Lecturer() {
        initComponents();
        LoadTable();
        autoId();
         
        this.setBorder(null);
        BasicInternalFrameUI bui = (BasicInternalFrameUI)this.getUI();
        bui.setNorthPane(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        EmpN_tf = new javax.swing.JTextField();
        RankGen_btn = new javax.swing.JButton();
        EmpId_tf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Center_cb = new javax.swing.JComboBox<>();
        Level_cb = new javax.swing.JComboBox<>();
        Building_cb = new javax.swing.JComboBox<>();
        Rank_tf = new javax.swing.JTextField();
        Faculty_cb = new javax.swing.JComboBox<>();
        Department_cb = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        RankL = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Add_btn = new javax.swing.JButton();
        Update_btn = new javax.swing.JButton();
        Delete_btn = new javax.swing.JButton();
        Clear_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        Search_tf = new javax.swing.JTextField();
        Next_btn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        jLabel1.setText("Employee Name");

        EmpN_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmpN_tfActionPerformed(evt);
            }
        });

        RankGen_btn.setText("Generate Rank");
        RankGen_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RankGen_btnActionPerformed(evt);
            }
        });

        EmpId_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmpId_tfActionPerformed(evt);
            }
        });

        jLabel4.setText("Department");

        jLabel2.setText("Faculty");

        jLabel3.setText("Employee ID");

        Center_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Malabe", "Metro", "Matara", "Kandy", "Kurunegala", "Jaffna" }));
        Center_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Center_cbActionPerformed(evt);
            }
        });

        Level_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1", "2", "3", "4", "5", "6" }));

        Building_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        Building_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Building_cbActionPerformed(evt);
            }
        });

        Rank_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Rank_tfActionPerformed(evt);
            }
        });

        Faculty_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Computing", "Business Management", "Engineering", "Humanities & Sciences", "Graduate Studies & Research" }));
        Faculty_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Faculty_cbActionPerformed(evt);
            }
        });

        Department_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        Department_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Department_cbActionPerformed(evt);
            }
        });

        jLabel5.setText("Center");

        jLabel6.setText("Building");

        jLabel7.setText("Level");

        RankL.setText("Rank");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Faculty_cb, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EmpN_tf, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmpId_tf, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Department_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RankL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Rank_tf)
                            .addComponent(Building_cb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Level_cb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Center_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(RankGen_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Center_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Building_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Level_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Rank_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RankL)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmpId_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmpN_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Faculty_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Department_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addComponent(RankGen_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        Add_btn.setText("Add");
        Add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_btnActionPerformed(evt);
            }
        });

        Update_btn.setText("Update");
        Update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_btnActionPerformed(evt);
            }
        });

        Delete_btn.setText("Delete");
        Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_btnActionPerformed(evt);
            }
        });

        Clear_btn.setText("Clear");
        Clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Update_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(Add_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Clear_btn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Delete_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(Add_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Update_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Delete_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Clear_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Faculty", "Department", "Campus", "Building", "Level", "Rank"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(100);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(4).setMinWidth(100);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(150);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(150);
            jTable1.getColumnModel().getColumn(6).setMinWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(7).setMinWidth(100);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(100);
        }

        jLabel8.setText("Search");

        Search_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_tfActionPerformed(evt);
            }
        });
        Search_tf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Search_tfKeyReleased(evt);
            }
        });

        Next_btn.setText("Next");
        Next_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Search_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Next_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Next_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Lecturer Management");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(76, 76, 76))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
        String EmpID="";
        String Level = "";
        String Rank = "";
        String PrimaryKey ="";
        
    private void Add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_btnActionPerformed
       
        EmpID = EmpId_tf.getText().toString(); 
        String EmpName = EmpN_tf.getText().toString();
        String Faculty = Faculty_cb.getSelectedItem().toString(); 
        String Department = Department_cb.getSelectedItem().toString();
        String Ceneter = Center_cb.getSelectedItem().toString();
        String Building = Building_cb.getSelectedItem().toString();
        
        Level = Level_cb.getSelectedItem().toString();
        
        
       
       
           if (validateFields() && validateAdd()){
                 
            try
                
                
            {
                DataBase.setData("insert into lecturer values('"+EmpID+"','"+EmpName+"','"+Faculty+"','"+Department+"','"+Ceneter+"','"+Building+"','"+Level+"','"+Rank+"')");
                JOptionPane.showMessageDialog(null, "Lecturer Successfully Added");
                
                

            }
            catch (Exception e)
            {
                        JOptionPane.showMessageDialog(null, "Failed" + e);
            }
           }
            
            LoadTable();
            autoId();
            Refresh();
    }//GEN-LAST:event_Add_btnActionPerformed

    private void Update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_btnActionPerformed
        //added below line
        String lecname ="";
        EmpID = EmpId_tf.getText().toString();
        
        String EmpName = EmpN_tf.getText().toString();
       
        String Faculty = Faculty_cb.getSelectedItem().toString();
        String Department = Department_cb.getSelectedItem().toString();
        String Ceneter = Center_cb.getSelectedItem().toString();
        String Building = Building_cb.getSelectedItem().toString();
        
        Level = Level_cb.getSelectedItem().toString();
        
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();

        if (row != -1) 
        {
                                 
             if(validateFields()){
                int confirm = JOptionPane.showConfirmDialog(null, "Do you want to Update?", "Update", JOptionPane.YES_NO_OPTION); 
                if (confirm == 0) 
                {
                    //add 1
                    try{

                        ResultSet rs = DataBase.getData("SELECT lecturer_name FROM lecturer where empid = '"+EmpID+"' ");

                        if(rs.next()){

                            lecname = rs.getString("lecturer_name");
                        }
                    }catch(Exception e){

                     //  JOptionPane.showMessageDialog(rootPane, e);
                    }
                    try{

                        ResultSet rs = DataBase.getData("SELECT concat(l1name,'-',l2name)as com FROM session where l1name = '"+lecname+"' || l2name = '"+lecname+"' ");

                        while(rs.next()){

                            String com = rs.getString("com");
                            
                            String[] result = com.split("-");
                            String l1 = result[0];
                            String l2 = result[1];
                            
                            if(l1.equals(lecname)){
                            
                                 try
                                {

                                  DataBase.setData("UPDATE session set l1name = '"+EmpName+"' where l1name = '"+lecname+"' ");
                                  
                                }
                                catch (Exception e)
                                {
                                         // JOptionPane.showMessageDialog(null, "Failed session update" + e);
                                }                           
                            }else if(l2.equals(lecname)){
                               
                                 try
                                {

                                  DataBase.setData("UPDATE session set l2name = '"+EmpName+"' where l2name = '"+lecname+"' ");
                                  
                                }
                                catch (Exception e)
                                {
                                         // JOptionPane.showMessageDialog(null, "Failed session update" + e);
                                } 
                                                       
                            }
                            
                        }
                       
                    }catch(Exception e){

                       // JOptionPane.showMessageDialog(rootPane, e);
                    }
                    //end add 1
                    
                    try
                    {
                        
                      DataBase.setData("UPDATE lecturer set empID = '"+EmpID+"', Lecturer_name = '"+EmpName+"', faculty = '"+Faculty+"', Department = '"+Department+"', Campus = '"+Ceneter+"', building = '"+Building+"', Levels = '"+Level+"', Ranking = '"+Rank+"' where EmpId = '"+PrimaryKey+"' ");
                      JOptionPane.showMessageDialog(null, " Successfully Updated");
                      Refresh();
                                            
                    }
                    catch (Exception e)
                    {
                              JOptionPane.showMessageDialog(null, "Failed" + e);
                    }
                    
                     try
                    {
                        
                      DataBase.setData("UPDATE activehours set empID = '"+EmpID+"', Lecturer_name = '"+EmpName+"' where EmpId = '"+PrimaryKey+"' ");
                                                              
                    }
                    catch (Exception e)
                    {
                              JOptionPane.showMessageDialog(null, "Failed" + e);
                    }            
                  LoadTable();
                  autoId();
                }
            }
           
      }else{
                    
                JOptionPane.showMessageDialog(null, "Please Select a row from the table to Update");
                
            }
    }//GEN-LAST:event_Update_btnActionPerformed

    private void Delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_btnActionPerformed
        
        EmpID = EmpId_tf.getText().toString();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int row = jTable1.getSelectedRow();
 
        if (row != -1) 
        {
        
            int confirm = JOptionPane.showConfirmDialog(null, "Do you want to delete?", "Delete", JOptionPane.YES_NO_OPTION); 
            if (confirm == 0) 
            {
                try
                {
                  DataBase.setData("DELETE FROM lecturer WHERE Empid = '"+EmpID+"'");
                  JOptionPane.showMessageDialog(null, "Successfully Deleted");

                }
                catch (Exception e)
                {
                          JOptionPane.showMessageDialog(null, "Failed" + e);
                }
                try
                {
                  DataBase.setData("DELETE FROM activehours WHERE Empid = '"+EmpID+"'");
                 
                }
                catch (Exception e)
                {
                          JOptionPane.showMessageDialog(null, "Failed" + e);
                }
              Refresh();
              LoadTable();
              
            }
        }
        else
        {
             JOptionPane.showMessageDialog(null, "Please Select a Row to Delete");
        }
        
    }//GEN-LAST:event_Delete_btnActionPerformed

    private void Clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_btnActionPerformed
        LoadTable();
        Refresh();
        autoId();
        
    }//GEN-LAST:event_Clear_btnActionPerformed

    private void Search_tfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Search_tfKeyReleased
        String search = Search_tf.getText();
        
       
            //String search =search_tf.getText();
            if (search.equalsIgnoreCase("")) 
            {
                LoadTable();
            } 
            else 
            {
                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                dtm.setRowCount(0);

                try 
                {

                        ResultSet rs = DataBase.getData("SELECT * FROM lecturer WHERE empid LIKE '%" + search + "%' "
                            + "OR lecturer_name LIKE '%"+search+"%' OR faculty LIKE '%"+search+"%' OR department LIKE '%"+search+"%' OR campus LIKE '%"+search+"%' OR building LIKE '%"+search+"%' OR levels LIKE '%"+search+"%' OR ranking LIKE '%"+search+"%' ");
                    while (rs.next()) 
                    {

                        Vector v = new Vector();

                        v.add(rs.getString(1));
                        v.add(rs.getString(2));  
                        v.add(rs.getString(3));  
                        v.add(rs.getString(4));
                        v.add(rs.getString(5));
                        v.add(rs.getString(6));  
                        v.add(rs.getString(7));  
                        v.add(rs.getString(8)); 

                        dtm.addRow(v);

                    }

                } 
                catch (Exception e)
                {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, e);
                }
            }
    }//GEN-LAST:event_Search_tfKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        // This variable use for Get primary key value for Updating primary key purpose
        PrimaryKey = (jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()); 
        
        EmpId_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        EmpN_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString()); 
        Faculty_cb.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        Department_cb.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        Center_cb.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        Building_cb.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
        Level_cb.setSelectedItem(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
        
        RankL.setText("Rank");
        Rank_tf.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
        
      
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void RankGen_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RankGen_btnActionPerformed
        RankGenerator();
       
    }//GEN-LAST:event_RankGen_btnActionPerformed

    private void Next_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_btnActionPerformed
        HomeDesktop.removeAll();
        ActiveHours ah= new ActiveHours();
        HomeDesktop.add(ah).setVisible(true);
        ah.setSize(HomeDesktop.getWidth(), HomeDesktop.getHeight());
        
      
    }//GEN-LAST:event_Next_btnActionPerformed

    private void Faculty_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Faculty_cbActionPerformed
        // TODO add your handling code here:
        
        if(Faculty_cb.getSelectedItem().equals("Computing")){
        
            Department_cb.removeAllItems();
            Department_cb.addItem("Select");
            Department_cb.addItem("Information Technology");
            Department_cb.addItem("Software Engineering");
            Department_cb.addItem("Computer Systems");
            
        }else if (Faculty_cb.getSelectedItem().equals("Business Management")){
        
             Department_cb.removeAllItems();
             Department_cb.addItem("Select");
             Department_cb.addItem("Information Management");
             Department_cb.addItem("Business Management");
        
        }else if (Faculty_cb.getSelectedItem().equals("Engineering")){
        
             Department_cb.removeAllItems();
             Department_cb.addItem("Select");
             Department_cb.addItem("Civil Engineering");
             Department_cb.addItem("Mechanical Engineering");
             Department_cb.addItem("Electronic Engineering");
             Department_cb.addItem("Materials Engineering");
             Department_cb.addItem("Quantity Surveying");
        
        }else if (Faculty_cb.getSelectedItem().equals("Humanities & Sciences")){
        
             Department_cb.removeAllItems();
             Department_cb.addItem("Select");
             Department_cb.addItem("English Language");
             Department_cb.addItem("Natural Sciences");
             Department_cb.addItem("Law");
             Department_cb.addItem("Mathematics");
             Department_cb.addItem("Education");
             Department_cb.addItem("Nursing");
             Department_cb.addItem("Psycology");
        
        }else if (Faculty_cb.getSelectedItem().equals("Graduate Studies & Research")){
        
             Department_cb.removeAllItems();
             Department_cb.addItem("Select");
             Department_cb.addItem("Graduate Studies");
                         
        }else{
            
            Department_cb.removeAllItems();
            Department_cb.addItem("Select");
        }
    }//GEN-LAST:event_Faculty_cbActionPerformed

    private void Department_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Department_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Department_cbActionPerformed

    private void EmpN_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmpN_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmpN_tfActionPerformed

    private void Center_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Center_cbActionPerformed
        // TODO add your handling code here:
        if(Center_cb.getSelectedItem().equals("Malabe")){
        
            Building_cb.removeAllItems();
            Building_cb.addItem("Main");
            Building_cb.addItem("A - Block");
            Building_cb.addItem("B - Block");
            Building_cb.addItem("C - Block");
            Building_cb.addItem("D-Block");
            Building_cb.addItem("New Building");
            Building_cb.addItem("BM Building");
            Building_cb.addItem("Engineering Building");
            Building_cb.addItem("HS Building");
            Building_cb.addItem("GSR Building");
            
            
            
        }else if ((Center_cb.getSelectedItem().equals("Kandy"))|| (Center_cb.getSelectedItem().equals("Kurunegala"))||(Center_cb.getSelectedItem().equals("Matara")) || (Center_cb.getSelectedItem().equals("Jaffna"))){
        
            Building_cb.removeAllItems();
            Building_cb.addItem("Select");
            Building_cb.addItem("Main Building");
        
        }else if (Center_cb.getSelectedItem().equals("Metro")){
        
            Building_cb.removeAllItems();
            Building_cb.addItem("Select");
            Building_cb.addItem("Building 1");
            Building_cb.addItem("Building 2");
            Building_cb.addItem("Building 3");
            Building_cb.addItem("Building 4");
            Building_cb.addItem("Building 5");
                       
        }else{
            
            Building_cb.removeAllItems();
            Building_cb.addItem("Select");
        }
        
    }//GEN-LAST:event_Center_cbActionPerformed

    private void Building_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Building_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Building_cbActionPerformed

    private void Rank_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Rank_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Rank_tfActionPerformed

    private void EmpId_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmpId_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmpId_tfActionPerformed

    private void Search_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_tfActionPerformed

    public void Refresh()
    {
        EmpN_tf.setText("");
        EmpId_tf.setText("");
        Faculty_cb.setSelectedItem("Select");
        Department_cb.setSelectedItem("Select");
        Center_cb.setSelectedItem("Select");
        Building_cb.setSelectedItem("Select");
        Level_cb.setSelectedItem("Select");
        RankL.setText("");
        Rank_tf.setText("");
        Search_tf.setText("");
        
        autoId();
    }
    
    public void LoadTable()
    {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        
        try {
              
                ResultSet rs = DataBase.getData("Select*  from lecturer");
                
                while (rs.next())
                {

                    Vector v = new Vector();
                   
                    v.add(rs.getString(1));
                    v.add(rs.getString(2));  
                    v.add(rs.getString(3));  
                    v.add(rs.getString(4));
                    v.add(rs.getString(5));
                    v.add(rs.getString(6));  
                    v.add(rs.getString(7));  
                    v.add(rs.getString(8));
                     
                   

                    dtm.addRow(v);

                }

            } catch (Exception e) 
            {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e);
            }
    }
    
    public void RankGenerator()
    {
       EmpID= EmpId_tf.getText();
       Level = Level_cb.getSelectedItem().toString();
       
       
       
       
       
       
            if(Level != "Select"){

                 if(EmpID.length()== 6){

                 Rank = Level+ "." +EmpID;
                 Rank_tf.setText(Rank);

                 }else{

                      JOptionPane.showMessageDialog(null, "Employee ID should be a 6 digit value");

                 }

            }else{

                 JOptionPane.showMessageDialog(null, "Select the Level first");

            }
       
    }
    
   public boolean validateFields(){
                 
        String vname = "[a-z A-Z]+\\.?";
        String vid = "^[0-9]{6}$";
        
        //validate id
        Pattern pid = Pattern.compile(vid); // start , combination , total num
        Matcher i = pid.matcher(EmpId_tf.getText());

        //validate name
        Pattern pname = Pattern.compile(vname, Pattern.CASE_INSENSITIVE);
        Matcher n = pname.matcher(EmpN_tf.getText());
  
        if (EmpId_tf.getText().equalsIgnoreCase("")){
            
            JOptionPane.showMessageDialog(null, "Enter Employee ID");
            return false;
            
            
        }else{
        
            if (i.matches()) 
            {
                
            } else 
            {
                JOptionPane.showMessageDialog(null, "Employee ID should be a 6 digit value");
                return false;
            }
        
        }
        if (EmpN_tf.getText().equalsIgnoreCase("")){
            
            JOptionPane.showMessageDialog(null, "Enter Employee Name");
            return false;
            
        }else{
        
            if (n.matches()) 
            {
                
            } else 
            {
                JOptionPane.showMessageDialog(null, "Invalid Name");
                return false;
            }      
        }
             
        if(Faculty_cb.getSelectedItem().toString() == "Select")
       {
                JOptionPane.showMessageDialog(null, "Select Faculty");
                return false;
       }
         if(Department_cb.getSelectedItem().toString() == "Select")
       {
                JOptionPane.showMessageDialog(null, "Select Department");
                return false;
       }
        
       if(Center_cb.getSelectedItem().toString() == "Select")
       {
                JOptionPane.showMessageDialog(null, "Select Campus/Center");
                return false;
       }
        
      
        
       if(Building_cb.getSelectedItem().toString() == "Select")
       {
                JOptionPane.showMessageDialog(null, "Select Building");
                return false;
       }
       
       if(Level_cb.getSelectedItem().toString() == "Select")
       {
                JOptionPane.showMessageDialog(null, "Select Level");
                return false;
       }
       
        if(Rank=="")
            {
                RankGenerator();
            }
         
            return true;
    }
   
   public boolean validateAdd(){
   
    String id = EmpId_tf.getText();
        String exist = "";
        
         try
        {
                //System.out.println(" " + nic);
                ResultSet ex = DataBase.getData("SELECT `EmpID` FROM `lecturer` WHERE `EmpID` = '" +id+ "' GROUP BY `EmpId` HAVING COUNT(*) > '0'");

                while (ex.next())
                {
                    exist = ex.getString("EmpId");
                    //JOptionPane.showMessageDialog(null, "STATUS" +  status);
                    // System.out.println(" " + status);
                }
            } 
        catch (Exception e) 
        {
                
            JOptionPane.showMessageDialog(null, "Failed" + e);
        }
        if (exist != ""){
            
            JOptionPane.showMessageDialog(null, "Employee ID is already being used");
            return false;
            
        }
   
        return true; 
   }
   
    private void autoId()
    {
        
    
        
    
            try{

                ResultSet rs = DataBase.getData("SELECT `EmpID` FROM `lecturer` ORDER BY EmpID DESC LIMIT 1");

                if(rs.next()){

                    String id = rs.getString("EmpID");
                    int n=Integer.parseInt(id);
                    n++;
                   // String eid = Integer.toString(n);  
                    String output = String.format("%06d", n);
                    EmpId_tf.setText(output);
                }
                else
                {
                    EmpId_tf.setText("000001");

                }

            }catch(Exception e){

                JOptionPane.showMessageDialog(rootPane, e);
            }
        
    
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_btn;
    private javax.swing.JComboBox<String> Building_cb;
    private javax.swing.JComboBox<String> Center_cb;
    private javax.swing.JButton Clear_btn;
    private javax.swing.JButton Delete_btn;
    private javax.swing.JComboBox<String> Department_cb;
    private javax.swing.JTextField EmpId_tf;
    private javax.swing.JTextField EmpN_tf;
    private javax.swing.JComboBox<String> Faculty_cb;
    private javax.swing.JComboBox<String> Level_cb;
    private javax.swing.JButton Next_btn;
    private javax.swing.JButton RankGen_btn;
    private javax.swing.JLabel RankL;
    private javax.swing.JTextField Rank_tf;
    private javax.swing.JTextField Search_tf;
    private javax.swing.JButton Update_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
