/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timetablemanagement;

import java.sql.ResultSet;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Thiline Tissera
 */
public class Statistic extends javax.swing.JInternalFrame {

    /**
     * Creates new form Statistic
     */
    public Statistic() {
        initComponents();
        
        this.setBorder(null);
        BasicInternalFrameUI bui = (BasicInternalFrameUI)this.getUI();
        bui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        regLec = new javax.swing.JRadioButton();
        regStud = new javax.swing.JRadioButton();
        regSub = new javax.swing.JRadioButton();
        regRoom = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        pie = new javax.swing.JButton();
        Histogram = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        statisticTable = new javax.swing.JTable();

        buttonGroup1.add(regLec);
        regLec.setText("Registered lecturers");
        regLec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regLecActionPerformed(evt);
            }
        });

        buttonGroup1.add(regStud);
        regStud.setText("Registered Students");
        regStud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regStudActionPerformed(evt);
            }
        });

        buttonGroup1.add(regSub);
        regSub.setText("Registered Subjects");
        regSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regSubActionPerformed(evt);
            }
        });

        buttonGroup1.add(regRoom);
        regRoom.setText("Registered Rooms");
        regRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regRoomActionPerformed(evt);
            }
        });

        pie.setText("PIE CHART");
        pie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pieActionPerformed(evt);
            }
        });

        Histogram.setText("Histogram");
        Histogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HistogramActionPerformed(evt);
            }
        });

        statisticTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(statisticTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(regRoom)
                            .addComponent(regStud)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(regSub, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(regLec, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(Histogram, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pie, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Histogram, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pie, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(regLec)
                        .addGap(57, 57, 57)
                        .addComponent(regStud)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(regSub)
                        .addGap(56, 56, 56)
                        .addComponent(regRoom))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(125, 125, 125))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regLecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regLecActionPerformed
        
        resetRows();
        
        try{
          
            ResultSet rs = DataBase.getData("SELECT Lecturer_name FROM lecturer");
//           pst = conn.prepareStatement(sql);
//           rs=pst.executeQuery();
           
 
           while(rs.next()){
               String name = rs.getString("Lecturer_name");
               String tbdata[] = {name};
               DefaultTableModel tm = (DefaultTableModel)statisticTable.getModel();
               tm.addRow(tbdata);
                              
           }
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
       }
        
        
    }//GEN-LAST:event_regLecActionPerformed

    private void regStudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regStudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regStudActionPerformed

    private void regRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regRoomActionPerformed
       
        resetRows();
        try{
          
            ResultSet rs = DataBase.getData("SELECT RoomName FROM location");
//           pst = conn.prepareStatement(sql);
//           rs=pst.executeQuery();
           
 
           while(rs.next()){
               String name = rs.getString("RoomName");
               String tbdata[] = {name};
               DefaultTableModel tm = (DefaultTableModel)statisticTable.getModel();
               tm.addRow(tbdata);
                              
           }
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
       }
    }//GEN-LAST:event_regRoomActionPerformed

    private void pieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pieActionPerformed
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        pieDataset.setValue("MALE", new Integer(321));
        pieDataset.setValue("FEMALE", new Integer(230));
        JFreeChart chart = ChartFactory.createPieChart("Gender", pieDataset, true, true, true);
        PiePlot p=(PiePlot)chart.getPlot();
//        p.setForegroundAlpha(TOP_ALIGNMENT);
        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(600,600);
    }//GEN-LAST:event_pieActionPerformed

    private void HistogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HistogramActionPerformed

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        dataset.setValue(551, "Subjects", "MTIT");
        dataset.setValue(100, "Subjects", "ML");
        dataset.setValue(121, "Subjects", "Robotics");
        dataset.setValue(200, "Subjects", "SQA");
        dataset.setValue(551, "Subjects", "PPW");
        dataset.setValue(130, "Subjects", "ISA");
        
        JFreeChart chart = ChartFactory.createBarChart("Subjects", "Subjet Name", "Number of Students", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot p=chart.getCategoryPlot();
        p.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Bar Chart for Subjects", chart);
        frame.setVisible(true);
        frame.setSize(600,600);
        
    }//GEN-LAST:event_HistogramActionPerformed

    private void regSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regSubActionPerformed
        
        resetRows();
        try{
          
            ResultSet rs = DataBase.getData("SELECT subName FROM Subjects");
//           pst = conn.prepareStatement(sql);
//           rs=pst.executeQuery();
           
 
           while(rs.next()){
               String name = rs.getString("subName");
               String tbdata[] = {name};
               DefaultTableModel tm = (DefaultTableModel)statisticTable.getModel();
               tm.addRow(tbdata);
                              
           }
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
       }
    }//GEN-LAST:event_regSubActionPerformed

    public void resetRows()
    {
        DefaultTableModel model = (DefaultTableModel) statisticTable.getModel();
        model.setRowCount(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Histogram;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton pie;
    private javax.swing.JRadioButton regLec;
    private javax.swing.JRadioButton regRoom;
    private javax.swing.JRadioButton regStud;
    private javax.swing.JRadioButton regSub;
    private javax.swing.JTable statisticTable;
    // End of variables declaration//GEN-END:variables
}
